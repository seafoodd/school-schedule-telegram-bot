from telegram import Update
from telegram.ext import ContextTypes
from services.scheduler import ScheduleService


async def start(update: Update, _: ContextTypes.DEFAULT_TYPE) -> None:
    welcome_msg = (
        "‚ö° <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/week - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é (1-—è/2-—è)\n"
        "/chat_id - –ü–æ–∫–∞–∑–∞—Ç—å ID —á–∞—Ç–∞\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n\n"
    )

    await update.message.reply_html(
        text=welcome_msg.format(chat_id=update.effective_chat.id),
        disable_web_page_preview=True
    )

async def chat_id(update: Update, _: ContextTypes.DEFAULT_TYPE) -> None:
    chat_id_message = (
        "üìù <i>Chat ID:</i> <code>{chat_id}</code>"
    )

    await update.message.reply_html(
        text=chat_id_message.format(chat_id=update.effective_chat.id),
        disable_web_page_preview=True
    )

async def week(update: Update, _: ContextTypes.DEFAULT_TYPE) -> None:
    schedule_service = ScheduleService()
    shift = schedule_service.get_shift_type()
    await update.message.reply_text(f"üìÖ –°–µ–π—á–∞—Å {'–ø–µ—Ä–≤–∞—è' if shift == 1 else '–≤—Ç–æ—Ä–∞—è'} —Å–º–µ–Ω–∞.")

async def help_command(update: Update, _: ContextTypes.DEFAULT_TYPE) -> None:
    help_text = (
        "üÜò <b>–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É</b>\n\n"
        "üìå <u>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã</u>:\n"
        "/start - –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/week - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é (1-—è/2-—è)\n"
        "/chat_id - –ü–æ–∫–∞–∑–∞—Ç—å ID —á–∞—Ç–∞\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n\n"
        "üîß <u>–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º</u>:\n"
        "‚Ä¢ –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å - @seafood_dev"
    )
    await update.message.reply_html(help_text)